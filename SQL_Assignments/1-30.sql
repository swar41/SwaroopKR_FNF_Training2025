
-- 1. Display the lastname, department number, and department name for all employees
SELECT E.LASTNAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 2. Unique listing of all jobs in department 30 with location id
SELECT DISTINCT E.JOB_ID, J.JOB_TITLE, D.LOCATION_ID
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID = 30;

-- 3. Employees who earn a commission
SELECT E.LASTNAME, D.DEPARTMENT_NAME, D.LOCATION_ID, L.CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE E.COMMISSION_PCT IS NOT NULL;

-- 4. Employees with "a" in their lastname
SELECT E.LASTNAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.LASTNAME LIKE '%a%';

-- 5. Employees who work in Toronto
SELECT E.LASTNAME, J.JOB_TITLE, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE L.CITY = 'Toronto';

-- 6. Employee and manager details
SELECT E.LASTNAME AS "Employee", E.EMPLOYEE_ID AS "Emp#",
       M.LASTNAME AS "Manager", M.EMPLOYEE_ID AS "Manager#"
FROM EMPLOYEES E
LEFT JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY E.EMPLOYEE_ID;

-- 7. Employees in same department as others
SELECT E.LASTNAME AS "Employee", E.DEPARTMENT_ID AS "Dept#", C.LASTNAME AS "Colleague"
FROM EMPLOYEES E
JOIN EMPLOYEES C ON E.DEPARTMENT_ID = C.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID <> C.EMPLOYEE_ID;

-- 8. Name, job, department name, salary and grade
SELECT E.FIRSTNAME, E.LASTNAME, J.JOB_TITLE, D.DEPARTMENT_NAME, E.SALARY,
       CASE
           WHEN E.SALARY >= 10000 THEN 'A'
           WHEN E.SALARY >= 8000 THEN 'B'
           WHEN E.SALARY >= 6000 THEN 'C'
           WHEN E.SALARY >= 4000 THEN 'D'
           ELSE 'E'
       END AS GRADE
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 9. Employees hired after Davies
SELECT FIRSTNAME, LASTNAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE > (SELECT HIRE_DATE FROM EMPLOYEES WHERE LASTNAME = 'Davies');

-- 10. Employees hired before their managers
SELECT E.FIRSTNAME || ' ' || E.LASTNAME AS "Employee", E.HIRE_DATE AS "Emp hired",
       M.FIRSTNAME || ' ' || M.LASTNAME AS "Manager", M.HIRE_DATE AS "Manager hired"
FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
WHERE E.HIRE_DATE < M.HIRE_DATE;

-- 11. Salary statistics
SELECT MAX(SALARY) AS "Maximum", MIN(SALARY) AS "Minimum",
       SUM(SALARY) AS "Sum", AVG(SALARY) AS "Average"
FROM EMPLOYEES;

-- 12. Salary statistics by job
SELECT JOB_ID, MAX(SALARY) AS "Maximum", MIN(SALARY) AS "Minimum",
       SUM(SALARY) AS "Sum", AVG(SALARY) AS "Average"
FROM EMPLOYEES
GROUP BY JOB_ID;

-- 13. Number of people with same job
SELECT JOB_ID, COUNT(*) AS "Count"
FROM EMPLOYEES
GROUP BY JOB_ID;

-- 14. Number of managers
SELECT COUNT(DISTINCT MANAGER_ID) AS "Number of Managers"
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

-- 15. Difference between highest and lowest salary
SELECT MAX(SALARY) - MIN(SALARY) AS "Difference"
FROM EMPLOYEES;

-- 16. Lowest paid employee per manager
SELECT MANAGER_ID, MIN(SALARY) AS "Lowest Salary"
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
GROUP BY MANAGER_ID
HAVING MIN(SALARY) >= 6000
ORDER BY MIN(SALARY) DESC;

-- 17. Department summary
SELECT D.DEPARTMENT_NAME AS "Name", L.CITY AS "Location",
       COUNT(E.EMPLOYEE_ID) AS "No.of people",
       ROUND(AVG(E.SALARY), 2) AS "Salary"
FROM DEPARTMENTS D
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME, L.CITY;

-- 18. Coworkers of Zlotkey
SELECT LASTNAME, HIRE_DATE
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LASTNAME = 'Zlotkey')
AND LASTNAME <> 'Zlotkey';

-- 19. Employees earning above average
SELECT FIRSTNAME, LASTNAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
ORDER BY SALARY ASC;

-- 20. Employees in departments with someone whose lastname contains "u"
SELECT E.EMPLOYEE_ID, E.LASTNAME
FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (
    SELECT DISTINCT DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE LASTNAME LIKE '%u%'
);

-- 21. Employees whose department location id is 1700
SELECT E.LASTNAME, E.DEPARTMENT_ID, E.JOB_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.LOCATION_ID = 1700;

-- 22. Employees who report to King
SELECT E.LASTNAME, E.SALARY
FROM EMPLOYEES E
WHERE E.MANAGER_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE LASTNAME = 'King');

-- 23. Employees in Executive department
SELECT E.DEPARTMENT_ID, E.LASTNAME, E.JOB_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_NAME = 'Executive';

-- 24. Employees earning above average and work with someone with "u" in lastname
SELECT E.EMPLOYEE_ID, E.LASTNAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
AND E.DEPARTMENT_ID IN (
    SELECT DISTINCT DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE LASTNAME LIKE '%u%'
);

-- 25. Unique department IDs
SELECT DISTINCT DEPARTMENT_ID
FROM EMPLOYEES;

-- 26. All employee details ordered by first name descending
SELECT *
FROM EMPLOYEES
ORDER BY FIRSTNAME DESC;

-- 27. Names, salary, PF
SELECT FIRSTNAME, LASTNAME, SALARY, SALARY * 0.15 AS PF
FROM EMPLOYEES;

-- 28. Employee ID, names, salary ordered by salary
SELECT EMPLOYEE_ID, FIRSTNAME, LASTNAME, SALARY
FROM EMPLOYEES
ORDER BY SALARY ASC;

-- 29. Total salaries payable
SELECT SUM(SALARY) AS "Total Salaries"
FROM EMPLOYEES;

-- 30. All employees and their managers (including King)
SELECT E.EMPLOYEE_ID AS "Emp#", E.LASTNAME AS "Employee",
       M.EMPLOYEE_ID AS "Manager#", M.LASTNAME AS "Manager"
FROM EMPLOYEES E
LEFT JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY E.EMPLOYEE_ID;

